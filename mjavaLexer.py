# Generated from mjava.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\62")
        buf.write("\u014c\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3")
        buf.write("\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b")
        buf.write("\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f")
        buf.write("\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3")
        buf.write("\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21")
        buf.write("\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26")
        buf.write("\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33")
        buf.write("\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3")
        buf.write("!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3$\3$\3$\3")
        buf.write("$\3%\3%\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(")
        buf.write("\3(\3(\3(\3)\3)\3)\3*\5*\u0111\n*\3*\7*\u0114\n*\f*\16")
        buf.write("*\u0117\13*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\5+")
        buf.write("\u0126\n+\3,\6,\u0129\n,\r,\16,\u012a\3-\3-\3-\3-\3.\6")
        buf.write(".\u0132\n.\r.\16.\u0133\3.\3.\3/\6/\u0139\n/\r/\16/\u013a")
        buf.write("\3/\3/\3\60\6\60\u0140\n\60\r\60\16\60\u0141\3\60\3\60")
        buf.write("\3\61\6\61\u0147\n\61\r\61\16\61\u0148\3\61\3\61\2\2\62")
        buf.write("\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O")
        buf.write(")Q*S+U,W-Y.[/]\60_\61a\62\3\2\t\4\2C\\c|\7\2//\62;C\\")
        buf.write("aac|\6\2\"\"\62;C\\c|\3\2\f\f\3\2\13\13\3\2\17\17\3\2")
        buf.write("\16\16\2\u0152\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t")
        buf.write("\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3")
        buf.write("\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2")
        buf.write("\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2")
        buf.write("\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2")
        buf.write("\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3")
        buf.write("\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\3c\3\2\2\2\5i")
        buf.write("\3\2\2\2\7k\3\2\2\2\tr\3\2\2\2\13y\3\2\2\2\r~\3\2\2\2")
        buf.write("\17\u0083\3\2\2\2\21\u0085\3\2\2\2\23\u008c\3\2\2\2\25")
        buf.write("\u008e\3\2\2\2\27\u0090\3\2\2\2\31\u0092\3\2\2\2\33\u0094")
        buf.write("\3\2\2\2\35\u009c\3\2\2\2\37\u00a3\3\2\2\2!\u00a5\3\2")
        buf.write("\2\2#\u00a7\3\2\2\2%\u00ab\3\2\2\2\'\u00b3\3\2\2\2)\u00b6")
        buf.write("\3\2\2\2+\u00bb\3\2\2\2-\u00c1\3\2\2\2/\u00d4\3\2\2\2")
        buf.write("\61\u00d6\3\2\2\2\63\u00d9\3\2\2\2\65\u00db\3\2\2\2\67")
        buf.write("\u00de\3\2\2\29\u00e1\3\2\2\2;\u00e3\3\2\2\2=\u00e5\3")
        buf.write("\2\2\2?\u00e7\3\2\2\2A\u00e9\3\2\2\2C\u00eb\3\2\2\2E\u00f0")
        buf.write("\3\2\2\2G\u00f6\3\2\2\2I\u00fa\3\2\2\2K\u00fe\3\2\2\2")
        buf.write("M\u0100\3\2\2\2O\u0107\3\2\2\2Q\u010c\3\2\2\2S\u0110\3")
        buf.write("\2\2\2U\u0125\3\2\2\2W\u0128\3\2\2\2Y\u012c\3\2\2\2[\u0131")
        buf.write("\3\2\2\2]\u0138\3\2\2\2_\u013f\3\2\2\2a\u0146\3\2\2\2")
        buf.write("cd\7e\2\2de\7n\2\2ef\7c\2\2fg\7u\2\2gh\7u\2\2h\4\3\2\2")
        buf.write("\2ij\7}\2\2j\6\3\2\2\2kl\7r\2\2lm\7w\2\2mn\7d\2\2no\7")
        buf.write("n\2\2op\7k\2\2pq\7e\2\2q\b\3\2\2\2rs\7u\2\2st\7v\2\2t")
        buf.write("u\7c\2\2uv\7v\2\2vw\7k\2\2wx\7e\2\2x\n\3\2\2\2yz\7x\2")
        buf.write("\2z{\7q\2\2{|\7k\2\2|}\7f\2\2}\f\3\2\2\2~\177\7o\2\2\177")
        buf.write("\u0080\7c\2\2\u0080\u0081\7k\2\2\u0081\u0082\7p\2\2\u0082")
        buf.write("\16\3\2\2\2\u0083\u0084\7*\2\2\u0084\20\3\2\2\2\u0085")
        buf.write("\u0086\7U\2\2\u0086\u0087\7v\2\2\u0087\u0088\7t\2\2\u0088")
        buf.write("\u0089\7k\2\2\u0089\u008a\7p\2\2\u008a\u008b\7i\2\2\u008b")
        buf.write("\22\3\2\2\2\u008c\u008d\7]\2\2\u008d\24\3\2\2\2\u008e")
        buf.write("\u008f\7_\2\2\u008f\26\3\2\2\2\u0090\u0091\7+\2\2\u0091")
        buf.write("\30\3\2\2\2\u0092\u0093\7\177\2\2\u0093\32\3\2\2\2\u0094")
        buf.write("\u0095\7g\2\2\u0095\u0096\7z\2\2\u0096\u0097\7v\2\2\u0097")
        buf.write("\u0098\7g\2\2\u0098\u0099\7p\2\2\u0099\u009a\7f\2\2\u009a")
        buf.write("\u009b\7u\2\2\u009b\34\3\2\2\2\u009c\u009d\7t\2\2\u009d")
        buf.write("\u009e\7g\2\2\u009e\u009f\7v\2\2\u009f\u00a0\7w\2\2\u00a0")
        buf.write("\u00a1\7t\2\2\u00a1\u00a2\7p\2\2\u00a2\36\3\2\2\2\u00a3")
        buf.write("\u00a4\7=\2\2\u00a4 \3\2\2\2\u00a5\u00a6\7.\2\2\u00a6")
        buf.write("\"\3\2\2\2\u00a7\u00a8\7k\2\2\u00a8\u00a9\7p\2\2\u00a9")
        buf.write("\u00aa\7v\2\2\u00aa$\3\2\2\2\u00ab\u00ac\7d\2\2\u00ac")
        buf.write("\u00ad\7q\2\2\u00ad\u00ae\7q\2\2\u00ae\u00af\7n\2\2\u00af")
        buf.write("\u00b0\7g\2\2\u00b0\u00b1\7c\2\2\u00b1\u00b2\7p\2\2\u00b2")
        buf.write("&\3\2\2\2\u00b3\u00b4\7k\2\2\u00b4\u00b5\7h\2\2\u00b5")
        buf.write("(\3\2\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7n\2\2\u00b8")
        buf.write("\u00b9\7u\2\2\u00b9\u00ba\7g\2\2\u00ba*\3\2\2\2\u00bb")
        buf.write("\u00bc\7y\2\2\u00bc\u00bd\7j\2\2\u00bd\u00be\7k\2\2\u00be")
        buf.write("\u00bf\7n\2\2\u00bf\u00c0\7g\2\2\u00c0,\3\2\2\2\u00c1")
        buf.write("\u00c2\7U\2\2\u00c2\u00c3\7{\2\2\u00c3\u00c4\7u\2\2\u00c4")
        buf.write("\u00c5\7v\2\2\u00c5\u00c6\7g\2\2\u00c6\u00c7\7o\2\2\u00c7")
        buf.write("\u00c8\7\60\2\2\u00c8\u00c9\7q\2\2\u00c9\u00ca\7w\2\2")
        buf.write("\u00ca\u00cb\7v\2\2\u00cb\u00cc\7\60\2\2\u00cc\u00cd\7")
        buf.write("r\2\2\u00cd\u00ce\7t\2\2\u00ce\u00cf\7k\2\2\u00cf\u00d0")
        buf.write("\7p\2\2\u00d0\u00d1\7v\2\2\u00d1\u00d2\7n\2\2\u00d2\u00d3")
        buf.write("\7p\2\2\u00d3.\3\2\2\2\u00d4\u00d5\7?\2\2\u00d5\60\3\2")
        buf.write("\2\2\u00d6\u00d7\7(\2\2\u00d7\u00d8\7(\2\2\u00d8\62\3")
        buf.write("\2\2\2\u00d9\u00da\7>\2\2\u00da\64\3\2\2\2\u00db\u00dc")
        buf.write("\7?\2\2\u00dc\u00dd\7?\2\2\u00dd\66\3\2\2\2\u00de\u00df")
        buf.write("\7#\2\2\u00df\u00e0\7?\2\2\u00e08\3\2\2\2\u00e1\u00e2")
        buf.write("\7-\2\2\u00e2:\3\2\2\2\u00e3\u00e4\7/\2\2\u00e4<\3\2\2")
        buf.write("\2\u00e5\u00e6\7,\2\2\u00e6>\3\2\2\2\u00e7\u00e8\7\61")
        buf.write("\2\2\u00e8@\3\2\2\2\u00e9\u00ea\7#\2\2\u00eaB\3\2\2\2")
        buf.write("\u00eb\u00ec\7v\2\2\u00ec\u00ed\7t\2\2\u00ed\u00ee\7w")
        buf.write("\2\2\u00ee\u00ef\7g\2\2\u00efD\3\2\2\2\u00f0\u00f1\7h")
        buf.write("\2\2\u00f1\u00f2\7c\2\2\u00f2\u00f3\7n\2\2\u00f3\u00f4")
        buf.write("\7u\2\2\u00f4\u00f5\7g\2\2\u00f5F\3\2\2\2\u00f6\u00f7")
        buf.write("\7p\2\2\u00f7\u00f8\7w\2\2\u00f8\u00f9\7o\2\2\u00f9H\3")
        buf.write("\2\2\2\u00fa\u00fb\7p\2\2\u00fb\u00fc\7g\2\2\u00fc\u00fd")
        buf.write("\7y\2\2\u00fdJ\3\2\2\2\u00fe\u00ff\7\60\2\2\u00ffL\3\2")
        buf.write("\2\2\u0100\u0101\7n\2\2\u0101\u0102\7g\2\2\u0102\u0103")
        buf.write("\7p\2\2\u0103\u0104\7i\2\2\u0104\u0105\7v\2\2\u0105\u0106")
        buf.write("\7j\2\2\u0106N\3\2\2\2\u0107\u0108\7v\2\2\u0108\u0109")
        buf.write("\7j\2\2\u0109\u010a\7k\2\2\u010a\u010b\7u\2\2\u010bP\3")
        buf.write("\2\2\2\u010c\u010d\7k\2\2\u010d\u010e\7f\2\2\u010eR\3")
        buf.write("\2\2\2\u010f\u0111\t\2\2\2\u0110\u010f\3\2\2\2\u0111\u0115")
        buf.write("\3\2\2\2\u0112\u0114\t\3\2\2\u0113\u0112\3\2\2\2\u0114")
        buf.write("\u0117\3\2\2\2\u0115\u0113\3\2\2\2\u0115\u0116\3\2\2\2")
        buf.write("\u0116T\3\2\2\2\u0117\u0115\3\2\2\2\u0118\u0119\7\61\2")
        buf.write("\2\u0119\u011a\7,\2\2\u011a\u011b\3\2\2\2\u011b\u011c")
        buf.write("\5W,\2\u011c\u011d\7,\2\2\u011d\u011e\7\61\2\2\u011e\u0126")
        buf.write("\3\2\2\2\u011f\u0120\7\61\2\2\u0120\u0121\7\61\2\2\u0121")
        buf.write("\u0122\3\2\2\2\u0122\u0123\5W,\2\u0123\u0124\5[.\2\u0124")
        buf.write("\u0126\3\2\2\2\u0125\u0118\3\2\2\2\u0125\u011f\3\2\2\2")
        buf.write("\u0126V\3\2\2\2\u0127\u0129\t\4\2\2\u0128\u0127\3\2\2")
        buf.write("\2\u0129\u012a\3\2\2\2\u012a\u0128\3\2\2\2\u012a\u012b")
        buf.write("\3\2\2\2\u012bX\3\2\2\2\u012c\u012d\7\"\2\2\u012d\u012e")
        buf.write("\3\2\2\2\u012e\u012f\b-\2\2\u012fZ\3\2\2\2\u0130\u0132")
        buf.write("\t\5\2\2\u0131\u0130\3\2\2\2\u0132\u0133\3\2\2\2\u0133")
        buf.write("\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134\u0135\3\2\2\2")
        buf.write("\u0135\u0136\b.\2\2\u0136\\\3\2\2\2\u0137\u0139\t\6\2")
        buf.write("\2\u0138\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u0138")
        buf.write("\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u013c\3\2\2\2\u013c")
        buf.write("\u013d\b/\2\2\u013d^\3\2\2\2\u013e\u0140\t\7\2\2\u013f")
        buf.write("\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u013f\3\2\2\2")
        buf.write("\u0141\u0142\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0144\b")
        buf.write("\60\2\2\u0144`\3\2\2\2\u0145\u0147\t\b\2\2\u0146\u0145")
        buf.write("\3\2\2\2\u0147\u0148\3\2\2\2\u0148\u0146\3\2\2\2\u0148")
        buf.write("\u0149\3\2\2\2\u0149\u014a\3\2\2\2\u014a\u014b\b\61\2")
        buf.write("\2\u014bb\3\2\2\2\r\2\u0110\u0113\u0115\u0125\u0128\u012a")
        buf.write("\u0133\u013a\u0141\u0148\3\b\2\2")
        return buf.getvalue()


class mjavaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    ID_ = 41
    COMMENT = 42
    TEXT = 43
    WHITESPACE = 44
    LINEBREAK = 45
    TAB = 46
    RETURN = 47
    PAGEFEATURE = 48

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'class'", "'{'", "'public'", "'static'", "'void'", "'main'", 
            "'('", "'String'", "'['", "']'", "')'", "'}'", "'extends'", 
            "'return'", "';'", "','", "'int'", "'boolean'", "'if'", "'else'", 
            "'while'", "'System.out.println'", "'='", "'&&'", "'<'", "'=='", 
            "'!='", "'+'", "'-'", "'*'", "'/'", "'!'", "'true'", "'false'", 
            "'num'", "'new'", "'.'", "'length'", "'this'", "'id'", "' '" ]

    symbolicNames = [ "<INVALID>",
            "ID_", "COMMENT", "TEXT", "WHITESPACE", "LINEBREAK", "TAB", 
            "RETURN", "PAGEFEATURE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "ID_", "COMMENT", "TEXT", "WHITESPACE", 
                  "LINEBREAK", "TAB", "RETURN", "PAGEFEATURE" ]

    grammarFileName = "mjava.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


