# Generated from mjava.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2.")
        buf.write("\u012f\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7")
        buf.write("\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3")
        buf.write("\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22")
        buf.write("\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3")
        buf.write("\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&")
        buf.write("\3&\3&\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*")
        buf.write("\5*\u010d\n*\3*\7*\u0110\n*\f*\16*\u0113\13*\3+\3+\3+")
        buf.write("\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\5+\u0122\n+\3,\6,\u0125")
        buf.write("\n,\r,\16,\u0126\3-\6-\u012a\n-\r-\16-\u012b\3-\3-\2\2")
        buf.write(".\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O")
        buf.write(")Q*S+U,W-Y.\3\2\6\4\2C\\c|\7\2//\62;C\\aac|\6\2\"\"\62")
        buf.write(";C\\c|\3\2\f\f\2\u0132\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2")
        buf.write("\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2")
        buf.write("\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2")
        buf.write("\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!")
        buf.write("\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\3[\3\2\2\2\5a\3\2\2\2\7c\3\2\2\2\tj\3\2\2\2\13")
        buf.write("q\3\2\2\2\rv\3\2\2\2\17{\3\2\2\2\21}\3\2\2\2\23\u0084")
        buf.write("\3\2\2\2\25\u0086\3\2\2\2\27\u0088\3\2\2\2\31\u008a\3")
        buf.write("\2\2\2\33\u008c\3\2\2\2\35\u0093\3\2\2\2\37\u009b\3\2")
        buf.write("\2\2!\u00a2\3\2\2\2#\u00a4\3\2\2\2%\u00a6\3\2\2\2\'\u00aa")
        buf.write("\3\2\2\2)\u00b2\3\2\2\2+\u00b5\3\2\2\2-\u00ba\3\2\2\2")
        buf.write("/\u00c0\3\2\2\2\61\u00d3\3\2\2\2\63\u00d5\3\2\2\2\65\u00d8")
        buf.write("\3\2\2\2\67\u00da\3\2\2\29\u00dd\3\2\2\2;\u00e0\3\2\2")
        buf.write("\2=\u00e2\3\2\2\2?\u00e4\3\2\2\2A\u00e6\3\2\2\2C\u00e8")
        buf.write("\3\2\2\2E\u00ea\3\2\2\2G\u00ef\3\2\2\2I\u00f5\3\2\2\2")
        buf.write("K\u00f9\3\2\2\2M\u00fd\3\2\2\2O\u00ff\3\2\2\2Q\u0106\3")
        buf.write("\2\2\2S\u010c\3\2\2\2U\u0121\3\2\2\2W\u0124\3\2\2\2Y\u0129")
        buf.write("\3\2\2\2[\\\7e\2\2\\]\7n\2\2]^\7c\2\2^_\7u\2\2_`\7u\2")
        buf.write("\2`\4\3\2\2\2ab\7}\2\2b\6\3\2\2\2cd\7r\2\2de\7w\2\2ef")
        buf.write("\7d\2\2fg\7n\2\2gh\7k\2\2hi\7e\2\2i\b\3\2\2\2jk\7u\2\2")
        buf.write("kl\7v\2\2lm\7c\2\2mn\7v\2\2no\7k\2\2op\7e\2\2p\n\3\2\2")
        buf.write("\2qr\7x\2\2rs\7q\2\2st\7k\2\2tu\7f\2\2u\f\3\2\2\2vw\7")
        buf.write("o\2\2wx\7c\2\2xy\7k\2\2yz\7p\2\2z\16\3\2\2\2{|\7*\2\2")
        buf.write("|\20\3\2\2\2}~\7U\2\2~\177\7v\2\2\177\u0080\7t\2\2\u0080")
        buf.write("\u0081\7k\2\2\u0081\u0082\7p\2\2\u0082\u0083\7i\2\2\u0083")
        buf.write("\22\3\2\2\2\u0084\u0085\7]\2\2\u0085\24\3\2\2\2\u0086")
        buf.write("\u0087\7_\2\2\u0087\26\3\2\2\2\u0088\u0089\7+\2\2\u0089")
        buf.write("\30\3\2\2\2\u008a\u008b\7\177\2\2\u008b\32\3\2\2\2\u008c")
        buf.write("\u008d\7e\2\2\u008d\u008e\7n\2\2\u008e\u008f\7c\2\2\u008f")
        buf.write("\u0090\7u\2\2\u0090\u0091\7u\2\2\u0091\u0092\7z\2\2\u0092")
        buf.write("\34\3\2\2\2\u0093\u0094\7g\2\2\u0094\u0095\7z\2\2\u0095")
        buf.write("\u0096\7v\2\2\u0096\u0097\7g\2\2\u0097\u0098\7p\2\2\u0098")
        buf.write("\u0099\7f\2\2\u0099\u009a\7u\2\2\u009a\36\3\2\2\2\u009b")
        buf.write("\u009c\7t\2\2\u009c\u009d\7g\2\2\u009d\u009e\7v\2\2\u009e")
        buf.write("\u009f\7w\2\2\u009f\u00a0\7t\2\2\u00a0\u00a1\7p\2\2\u00a1")
        buf.write(" \3\2\2\2\u00a2\u00a3\7=\2\2\u00a3\"\3\2\2\2\u00a4\u00a5")
        buf.write("\7.\2\2\u00a5$\3\2\2\2\u00a6\u00a7\7k\2\2\u00a7\u00a8")
        buf.write("\7p\2\2\u00a8\u00a9\7v\2\2\u00a9&\3\2\2\2\u00aa\u00ab")
        buf.write("\7d\2\2\u00ab\u00ac\7q\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae")
        buf.write("\7n\2\2\u00ae\u00af\7g\2\2\u00af\u00b0\7c\2\2\u00b0\u00b1")
        buf.write("\7p\2\2\u00b1(\3\2\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4")
        buf.write("\7h\2\2\u00b4*\3\2\2\2\u00b5\u00b6\7g\2\2\u00b6\u00b7")
        buf.write("\7n\2\2\u00b7\u00b8\7u\2\2\u00b8\u00b9\7g\2\2\u00b9,\3")
        buf.write("\2\2\2\u00ba\u00bb\7y\2\2\u00bb\u00bc\7j\2\2\u00bc\u00bd")
        buf.write("\7k\2\2\u00bd\u00be\7n\2\2\u00be\u00bf\7g\2\2\u00bf.\3")
        buf.write("\2\2\2\u00c0\u00c1\7U\2\2\u00c1\u00c2\7{\2\2\u00c2\u00c3")
        buf.write("\7u\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5\7g\2\2\u00c5\u00c6")
        buf.write("\7o\2\2\u00c6\u00c7\7\60\2\2\u00c7\u00c8\7q\2\2\u00c8")
        buf.write("\u00c9\7w\2\2\u00c9\u00ca\7v\2\2\u00ca\u00cb\7\60\2\2")
        buf.write("\u00cb\u00cc\7r\2\2\u00cc\u00cd\7t\2\2\u00cd\u00ce\7k")
        buf.write("\2\2\u00ce\u00cf\7p\2\2\u00cf\u00d0\7v\2\2\u00d0\u00d1")
        buf.write("\7n\2\2\u00d1\u00d2\7p\2\2\u00d2\60\3\2\2\2\u00d3\u00d4")
        buf.write("\7?\2\2\u00d4\62\3\2\2\2\u00d5\u00d6\7(\2\2\u00d6\u00d7")
        buf.write("\7(\2\2\u00d7\64\3\2\2\2\u00d8\u00d9\7>\2\2\u00d9\66\3")
        buf.write("\2\2\2\u00da\u00db\7?\2\2\u00db\u00dc\7?\2\2\u00dc8\3")
        buf.write("\2\2\2\u00dd\u00de\7#\2\2\u00de\u00df\7?\2\2\u00df:\3")
        buf.write("\2\2\2\u00e0\u00e1\7-\2\2\u00e1<\3\2\2\2\u00e2\u00e3\7")
        buf.write("/\2\2\u00e3>\3\2\2\2\u00e4\u00e5\7,\2\2\u00e5@\3\2\2\2")
        buf.write("\u00e6\u00e7\7\61\2\2\u00e7B\3\2\2\2\u00e8\u00e9\7#\2")
        buf.write("\2\u00e9D\3\2\2\2\u00ea\u00eb\7v\2\2\u00eb\u00ec\7t\2")
        buf.write("\2\u00ec\u00ed\7w\2\2\u00ed\u00ee\7g\2\2\u00eeF\3\2\2")
        buf.write("\2\u00ef\u00f0\7h\2\2\u00f0\u00f1\7c\2\2\u00f1\u00f2\7")
        buf.write("n\2\2\u00f2\u00f3\7u\2\2\u00f3\u00f4\7g\2\2\u00f4H\3\2")
        buf.write("\2\2\u00f5\u00f6\7p\2\2\u00f6\u00f7\7w\2\2\u00f7\u00f8")
        buf.write("\7o\2\2\u00f8J\3\2\2\2\u00f9\u00fa\7p\2\2\u00fa\u00fb")
        buf.write("\7g\2\2\u00fb\u00fc\7y\2\2\u00fcL\3\2\2\2\u00fd\u00fe")
        buf.write("\7\60\2\2\u00feN\3\2\2\2\u00ff\u0100\7n\2\2\u0100\u0101")
        buf.write("\7g\2\2\u0101\u0102\7p\2\2\u0102\u0103\7i\2\2\u0103\u0104")
        buf.write("\7v\2\2\u0104\u0105\7j\2\2\u0105P\3\2\2\2\u0106\u0107")
        buf.write("\7v\2\2\u0107\u0108\7j\2\2\u0108\u0109\7k\2\2\u0109\u010a")
        buf.write("\7u\2\2\u010aR\3\2\2\2\u010b\u010d\t\2\2\2\u010c\u010b")
        buf.write("\3\2\2\2\u010d\u0111\3\2\2\2\u010e\u0110\t\3\2\2\u010f")
        buf.write("\u010e\3\2\2\2\u0110\u0113\3\2\2\2\u0111\u010f\3\2\2\2")
        buf.write("\u0111\u0112\3\2\2\2\u0112T\3\2\2\2\u0113\u0111\3\2\2")
        buf.write("\2\u0114\u0115\7\61\2\2\u0115\u0116\7,\2\2\u0116\u0117")
        buf.write("\3\2\2\2\u0117\u0118\5W,\2\u0118\u0119\7,\2\2\u0119\u011a")
        buf.write("\7\61\2\2\u011a\u0122\3\2\2\2\u011b\u011c\7\61\2\2\u011c")
        buf.write("\u011d\7\61\2\2\u011d\u011e\3\2\2\2\u011e\u011f\5W,\2")
        buf.write("\u011f\u0120\7\2\2\3\u0120\u0122\3\2\2\2\u0121\u0114\3")
        buf.write("\2\2\2\u0121\u011b\3\2\2\2\u0122V\3\2\2\2\u0123\u0125")
        buf.write("\t\4\2\2\u0124\u0123\3\2\2\2\u0125\u0126\3\2\2\2\u0126")
        buf.write("\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127X\3\2\2\2\u0128")
        buf.write("\u012a\t\5\2\2\u0129\u0128\3\2\2\2\u012a\u012b\3\2\2\2")
        buf.write("\u012b\u0129\3\2\2\2\u012b\u012c\3\2\2\2\u012c\u012d\3")
        buf.write("\2\2\2\u012d\u012e\b-\2\2\u012eZ\3\2\2\2\n\2\u010c\u010f")
        buf.write("\u0111\u0121\u0124\u0126\u012b\3\b\2\2")
        return buf.getvalue()


class mjavaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    ID_ = 41
    COMMENT = 42
    TEXT = 43
    WHITESPACE = 44

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'class'", "'{'", "'public'", "'static'", "'void'", "'main'", 
            "'('", "'String'", "'['", "']'", "')'", "'}'", "'classx'", "'extends'", 
            "'return'", "';'", "','", "'int'", "'boolean'", "'if'", "'else'", 
            "'while'", "'System.out.println'", "'='", "'&&'", "'<'", "'=='", 
            "'!='", "'+'", "'-'", "'*'", "'/'", "'!'", "'true'", "'false'", 
            "'num'", "'new'", "'.'", "'length'", "'this'" ]

    symbolicNames = [ "<INVALID>",
            "ID_", "COMMENT", "TEXT", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "ID_", "COMMENT", "TEXT", "WHITESPACE" ]

    grammarFileName = "mjava.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


